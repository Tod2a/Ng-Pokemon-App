// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ng_pokemon.Infrastructure.Data;

#nullable disable

namespace ng_pokemon.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250828081114_AddingTypeTable")]
    partial class AddingTypeTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PokemonPokemonType", b =>
                {
                    b.Property<int>("PokemonTypesId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonsId")
                        .HasColumnType("int");

                    b.HasKey("PokemonTypesId", "PokemonsId");

                    b.HasIndex("PokemonsId");

                    b.ToTable("PokemonPokemonType");
                });

            modelBuilder.Entity("ng_pokemon.Domain.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cp")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<string>("Img_path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("ng_pokemon.Domain.Models.PokemonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("PokemonType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Steel"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fighting"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dragon"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Water"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Electric"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Fairy"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Fire"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Ice"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Bug"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Normal"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Grass"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Poison"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Psychic"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Rock"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Ground"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Ghost"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Dark"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Flying"
                        });
                });

            modelBuilder.Entity("PokemonPokemonType", b =>
                {
                    b.HasOne("ng_pokemon.Domain.Models.PokemonType", null)
                        .WithMany()
                        .HasForeignKey("PokemonTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ng_pokemon.Domain.Models.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("PokemonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
